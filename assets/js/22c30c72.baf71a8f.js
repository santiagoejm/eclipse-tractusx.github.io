"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[4515],{48265:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>f,frontMatter:()=>m,metadata:()=>y,toc:()=>h});var r=i(87462),a=(i(67294),i(3905)),n=i(26389),o=i(94891),s=i(75190),l=i(47507),c=i(24310),p=i(63303),d=(i(75035),i(85162));const m={id:"retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required-roles-view-connectors",title:"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)",description:"Example: GET: /api/administration/connectors <br />",sidebar_label:"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Connectors"],description:"Example: GET: /api/administration/connectors <br />\r\nExample: GET: /api/administration/connectors?page=0&size=15",parameters:[{name:"page",in:"query",description:"Optional query parameter defining the requested page number.",schema:{type:"integer",format:"int32",default:0},example:0},{name:"size",in:"query",description:"Optional query parameter defining the number of connectors listed per page.",schema:{type:"integer",format:"int32",default:15},example:15}],responses:{200:{description:"Returns a list of all of the current user's company's connectors.",content:{"application/json":{schema:{type:"object",properties:{meta:{type:"object",properties:{totalElements:{type:"integer",format:"int32"},totalPages:{type:"integer",format:"int32"},page:{type:"integer",format:"int32"},contentSize:{type:"integer",format:"int32"}},additionalProperties:!1},content:{type:"array",items:{type:"object",properties:{name:{type:"string",nullable:!0},location:{type:"string",nullable:!0},id:{type:"string",format:"uuid"},type:{enum:["COMPANY_CONNECTOR","CONNECTOR_AS_A_SERVICE"],type:"string"},status:{enum:["PENDING","ACTIVE","INACTIVE"],type:"string"},hostId:{type:"string",format:"uuid",nullable:!0},hostCompanyName:{type:"string",nullable:!0},selfDescriptionDocumentId:{type:"string",format:"uuid",nullable:!0},documentName:{type:"string",nullable:!0}},additionalProperties:!1},nullable:!0}},additionalProperties:!1}}}},401:{description:"The User is unauthorized"},500:{description:"Internal Server Error"}},method:"get",path:"/api/administration/Connectors",security:[{Bearer:[]}],securitySchemes:{Bearer:{type:"apiKey",description:"JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",name:"Authorization",in:"header"}},info:{title:"Org.Eclipse.TractusX.Portal.Backend.Administration.Service",version:"v2"},postman:{name:"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)",description:{content:"Example: GET: /api/administration/connectors <br />\r\nExample: GET: /api/administration/connectors?page=0&size=15",type:"text/plain"},url:{path:["api","administration","Connectors"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"Optional query parameter defining the requested page number.",type:"text/plain"},key:"page",value:""},{disabled:!1,description:{content:"Optional query parameter defining the number of connectors listed per page.",type:"text/plain"},key:"size",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery//org-eclipse-tractusx-portal-backend-administration-service",custom_edit_url:null},u=void 0,y={unversionedId:"kits/Digital Twin Kit/Software Development View/API EDC Discovery/retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required-roles-view-connectors",id:"kits/Digital Twin Kit/Software Development View/API EDC Discovery/retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required-roles-view-connectors",title:"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)",description:"Example: GET: /api/administration/connectors <br />",source:"@site/docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery/retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required-roles-view-connectors.api.mdx",sourceDirName:"kits/Digital Twin Kit/Software Development View/API EDC Discovery",slug:"/kits/Digital Twin Kit/Software Development View/API EDC Discovery/retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required-roles-view-connectors",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API EDC Discovery/retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required-roles-view-connectors",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required-roles-view-connectors",title:"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)",description:"Example: GET: /api/administration/connectors <br />",sidebar_label:"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Connectors"],description:"Example: GET: /api/administration/connectors <br />\r\nExample: GET: /api/administration/connectors?page=0&size=15",parameters:[{name:"page",in:"query",description:"Optional query parameter defining the requested page number.",schema:{type:"integer",format:"int32",default:0},example:0},{name:"size",in:"query",description:"Optional query parameter defining the number of connectors listed per page.",schema:{type:"integer",format:"int32",default:15},example:15}],responses:{200:{description:"Returns a list of all of the current user's company's connectors.",content:{"application/json":{schema:{type:"object",properties:{meta:{type:"object",properties:{totalElements:{type:"integer",format:"int32"},totalPages:{type:"integer",format:"int32"},page:{type:"integer",format:"int32"},contentSize:{type:"integer",format:"int32"}},additionalProperties:!1},content:{type:"array",items:{type:"object",properties:{name:{type:"string",nullable:!0},location:{type:"string",nullable:!0},id:{type:"string",format:"uuid"},type:{enum:["COMPANY_CONNECTOR","CONNECTOR_AS_A_SERVICE"],type:"string"},status:{enum:["PENDING","ACTIVE","INACTIVE"],type:"string"},hostId:{type:"string",format:"uuid",nullable:!0},hostCompanyName:{type:"string",nullable:!0},selfDescriptionDocumentId:{type:"string",format:"uuid",nullable:!0},documentName:{type:"string",nullable:!0}},additionalProperties:!1},nullable:!0}},additionalProperties:!1}}}},401:{description:"The User is unauthorized"},500:{description:"Internal Server Error"}},method:"get",path:"/api/administration/Connectors",security:[{Bearer:[]}],securitySchemes:{Bearer:{type:"apiKey",description:"JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",name:"Authorization",in:"header"}},info:{title:"Org.Eclipse.TractusX.Portal.Backend.Administration.Service",version:"v2"},postman:{name:"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)",description:{content:"Example: GET: /api/administration/connectors <br />\r\nExample: GET: /api/administration/connectors?page=0&size=15",type:"text/plain"},url:{path:["api","administration","Connectors"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"Optional query parameter defining the requested page number.",type:"text/plain"},key:"page",value:""},{disabled:!1,description:{content:"Optional query parameter defining the number of connectors listed per page.",type:"text/plain"},key:"size",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery//org-eclipse-tractusx-portal-backend-administration-service",custom_edit_url:null},sidebar:"kits",previous:{title:"Retrieve the offer subscriptions for the company with the linked connectorIds. (Authorization required - Roles: view_connectors)",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API EDC Discovery/retrieve-the-offer-subscriptions-for-the-company-with-the-linked-connector-ids-authorization-required-roles-view-connectors"},next:{title:"Triggers the daps endpoint for the given connector. (Authorization required - Roles: notexistingrole)",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API EDC Discovery/triggers-the-daps-endpoint-for-the-given-connector-authorization-required-roles-notexistingrole"}},g={},h=[{value:"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)",id:"retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required---roles-view_connectors",level:2}],v={toc:h};function f(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},v,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"retrieves-all-company-connectors-for-currently-logged-in-user-authorization-required---roles-view_connectors"},"Retrieves all company connectors for currently logged in user. (Authorization required - Roles: view_connectors)"),(0,a.kt)("p",null,"Example: GET: /api/administration/connectors ",(0,a.kt)("br",null),"\nExample: GET: /api/administration/connectors?page=0&size=15"),(0,a.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"Query Parameters")),(0,a.kt)("div",null,(0,a.kt)("ul",null,(0,a.kt)(s.Z,{className:"paramsItem",param:{name:"page",in:"query",description:"Optional query parameter defining the requested page number.",schema:{type:"integer",format:"int32",default:0},example:0},mdxType:"ParamsItem"}),(0,a.kt)(s.Z,{className:"paramsItem",param:{name:"size",in:"query",description:"Optional query parameter defining the number of connectors listed per page.",schema:{type:"integer",format:"int32",default:15},example:15},mdxType:"ParamsItem"})))),(0,a.kt)("div",null,(0,a.kt)(n.Z,{mdxType:"ApiTabs"},(0,a.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"Returns a list of all of the current user's company's connectors.")),(0,a.kt)("div",null,(0,a.kt)(o.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,a.kt)(d.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,a.kt)(p.Z,{mdxType:"SchemaTabs"},(0,a.kt)(d.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{textAlign:"left"}},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"meta"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(c.Z,{collapsible:!1,name:"totalElements",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"totalPages",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"page",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"contentSize",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,a.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{}},(0,a.kt)("summary",{style:{}},(0,a.kt)("strong",null,"content"),(0,a.kt)("span",{style:{opacity:"0.6"}}," object[]")),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(c.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"location",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"id",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:"**Possible values:** [`COMPANY_CONNECTOR`, `CONNECTOR_AS_A_SERVICE`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:"**Possible values:** [`PENDING`, `ACTIVE`, `INACTIVE`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"hostId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"hostCompanyName",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"selfDescriptionDocumentId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,a.kt)(c.Z,{collapsible:!1,name:"documentName",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))))),(0,a.kt)(d.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,a.kt)(l.Z,{responseExample:'{\n  "meta": {\n    "totalElements": 0,\n    "totalPages": 0,\n    "page": 0,\n    "contentSize": 0\n  },\n  "content": [\n    {\n      "name": "string",\n      "location": "string",\n      "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n      "type": "COMPANY_CONNECTOR",\n      "status": "PENDING",\n      "hostId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n      "hostCompanyName": "string",\n      "selfDescriptionDocumentId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n      "documentName": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,a.kt)(d.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"The User is unauthorized")),(0,a.kt)("div",null)),(0,a.kt)(d.Z,{label:"500",value:"500",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"Internal Server Error")),(0,a.kt)("div",null)))))}f.isMDXComponent=!0}}]);