"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[286],{34715:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>k,frontMatter:()=>m,metadata:()=>y,toc:()=>g});var i=a(87462),r=(a(67294),a(3905)),o=a(26389),n=a(94891),s=a(75190),l=a(47507),d=a(24310),c=a(63303),p=(a(75035),a(85162));const m={id:"updates-the-connector-url-authorization-required-roles-modify-connectors",title:"Updates the connector url (Authorization required - Roles: modify_connectors)",description:"Example: PUT: /api/administration/connectors/{connectorId}/connectorUrl",sidebar_label:"Updates the connector url (Authorization required - Roles: modify_connectors)",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Connectors"],description:"Example: PUT: /api/administration/connectors/{connectorId}/connectorUrl",parameters:[{name:"connectorId",in:"path",description:"Id of the connector to trigger the daps call.",required:!0,schema:{type:"string",format:"uuid"},example:"5636F9B9-C3DE-4BA5-8027-00D17A2FECFB"}],requestBody:{description:"The update data",content:{"application/json":{schema:{type:"object",properties:{connectorUrl:{type:"string",nullable:!0}},additionalProperties:!1}},"text/json":{schema:{type:"object",properties:{connectorUrl:{type:"string",nullable:!0}},additionalProperties:!1}},"application/*+json":{schema:{type:"object",properties:{connectorUrl:{type:"string",nullable:!0}},additionalProperties:!1}}}},responses:{204:{description:"Url was successfully updated."},400:{description:"Input parameter are invalid.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},401:{description:"The User is unauthorized"},403:{description:"user does not belong to host company of the connector.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},404:{description:"Connector was not found.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},500:{description:"Internal Server Error"},503:{description:"Access to Daps failed with the given status code.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}}},method:"put",path:"/api/administration/Connectors/{connectorId}/connectorUrl",security:[{Bearer:[]}],securitySchemes:{Bearer:{type:"apiKey",description:"JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",name:"Authorization",in:"header"}},jsonRequestBodyExample:{connectorUrl:"string"},info:{title:"Org.Eclipse.TractusX.Portal.Backend.Administration.Service",version:"v2"},postman:{name:"Updates the connector url (Authorization required - Roles: modify_connectors)",description:{content:"Example: PUT: /api/administration/connectors/{connectorId}/connectorUrl",type:"text/plain"},url:{path:["api","administration","Connectors",":connectorId","connectorUrl"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Id of the connector to trigger the daps call.",type:"text/plain"},type:"any",value:"",key:"connectorId"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"PUT",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"put api-method",info_path:"docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery//org-eclipse-tractusx-portal-backend-administration-service",custom_edit_url:null},u=void 0,y={unversionedId:"kits/Digital Twin Kit/Software Development View/API EDC Discovery/updates-the-connector-url-authorization-required-roles-modify-connectors",id:"kits/Digital Twin Kit/Software Development View/API EDC Discovery/updates-the-connector-url-authorization-required-roles-modify-connectors",title:"Updates the connector url (Authorization required - Roles: modify_connectors)",description:"Example: PUT: /api/administration/connectors/{connectorId}/connectorUrl",source:"@site/docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery/updates-the-connector-url-authorization-required-roles-modify-connectors.api.mdx",sourceDirName:"kits/Digital Twin Kit/Software Development View/API EDC Discovery",slug:"/kits/Digital Twin Kit/Software Development View/API EDC Discovery/updates-the-connector-url-authorization-required-roles-modify-connectors",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API EDC Discovery/updates-the-connector-url-authorization-required-roles-modify-connectors",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"updates-the-connector-url-authorization-required-roles-modify-connectors",title:"Updates the connector url (Authorization required - Roles: modify_connectors)",description:"Example: PUT: /api/administration/connectors/{connectorId}/connectorUrl",sidebar_label:"Updates the connector url (Authorization required - Roles: modify_connectors)",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Connectors"],description:"Example: PUT: /api/administration/connectors/{connectorId}/connectorUrl",parameters:[{name:"connectorId",in:"path",description:"Id of the connector to trigger the daps call.",required:!0,schema:{type:"string",format:"uuid"},example:"5636F9B9-C3DE-4BA5-8027-00D17A2FECFB"}],requestBody:{description:"The update data",content:{"application/json":{schema:{type:"object",properties:{connectorUrl:{type:"string",nullable:!0}},additionalProperties:!1}},"text/json":{schema:{type:"object",properties:{connectorUrl:{type:"string",nullable:!0}},additionalProperties:!1}},"application/*+json":{schema:{type:"object",properties:{connectorUrl:{type:"string",nullable:!0}},additionalProperties:!1}}}},responses:{204:{description:"Url was successfully updated."},400:{description:"Input parameter are invalid.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},401:{description:"The User is unauthorized"},403:{description:"user does not belong to host company of the connector.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},404:{description:"Connector was not found.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},500:{description:"Internal Server Error"},503:{description:"Access to Daps failed with the given status code.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}}},method:"put",path:"/api/administration/Connectors/{connectorId}/connectorUrl",security:[{Bearer:[]}],securitySchemes:{Bearer:{type:"apiKey",description:"JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",name:"Authorization",in:"header"}},jsonRequestBodyExample:{connectorUrl:"string"},info:{title:"Org.Eclipse.TractusX.Portal.Backend.Administration.Service",version:"v2"},postman:{name:"Updates the connector url (Authorization required - Roles: modify_connectors)",description:{content:"Example: PUT: /api/administration/connectors/{connectorId}/connectorUrl",type:"text/plain"},url:{path:["api","administration","Connectors",":connectorId","connectorUrl"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) Id of the connector to trigger the daps call.",type:"text/plain"},type:"any",value:"",key:"connectorId"}]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"PUT",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"put api-method",info_path:"docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery//org-eclipse-tractusx-portal-backend-administration-service",custom_edit_url:null},sidebar:"kits",previous:{title:"Triggers the daps endpoint for the given connector. (Authorization required - Roles: notexistingrole)",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API EDC Discovery/triggers-the-daps-endpoint-for-the-given-connector-authorization-required-roles-notexistingrole"},next:{title:"Introduction",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API Submodel/dotaas-part-2-http-rest-submodel-service-specification"}},h={},g=[{value:"Updates the connector url (Authorization required - Roles: modify_connectors)",id:"updates-the-connector-url-authorization-required---roles-modify_connectors",level:2}],v={toc:g};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,i.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"updates-the-connector-url-authorization-required---roles-modify_connectors"},"Updates the connector url (Authorization required - Roles: modify_connectors)"),(0,r.kt)("p",null,"Example: PUT: /api/administration/connectors/{connectorId}/connectorUrl"),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Path Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(s.Z,{className:"paramsItem",param:{name:"connectorId",in:"path",description:"Id of the connector to trigger the daps call.",required:!0,schema:{type:"string",format:"uuid"},example:"5636F9B9-C3DE-4BA5-8027-00D17A2FECFB"},mdxType:"ParamsItem"})))),(0,r.kt)(n.Z,{schemaType:"request",mdxType:"MimeTabs"},(0,r.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Request Body")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:"1rem",marginBottom:"1rem"}},(0,r.kt)("p",null,"The update data"))),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"connectorUrl",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{label:"text/json",value:"text/json",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Request Body")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:"1rem",marginBottom:"1rem"}},(0,r.kt)("p",null,"The update data"))),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"connectorUrl",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{label:"application/*+json",value:"application/*+json",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Request Body")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}},(0,r.kt)("div",{style:{marginTop:"1rem",marginBottom:"1rem"}},(0,r.kt)("p",null,"The update data"))),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"connectorUrl",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}))))),(0,r.kt)("div",null,(0,r.kt)(o.Z,{mdxType:"ApiTabs"},(0,r.kt)(p.Z,{label:"204",value:"204",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Url was successfully updated.")),(0,r.kt)("div",null)),(0,r.kt)(p.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Input parameter are invalid.")),(0,r.kt)("div",null,(0,r.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(c.Z,{mdxType:"SchemaTabs"},(0,r.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"title",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{}},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"errors"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object")),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"items",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{collapsible:!1,name:"errorId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(l.Z,{responseExample:'{\n  "type": "string",\n  "title": "string",\n  "status": 0,\n  "errors": {},\n  "errorId": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,r.kt)(p.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"The User is unauthorized")),(0,r.kt)("div",null)),(0,r.kt)(p.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"user does not belong to host company of the connector.")),(0,r.kt)("div",null,(0,r.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(c.Z,{mdxType:"SchemaTabs"},(0,r.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"title",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{}},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"errors"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object")),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"items",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{collapsible:!1,name:"errorId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(l.Z,{responseExample:'{\n  "type": "string",\n  "title": "string",\n  "status": 0,\n  "errors": {},\n  "errorId": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,r.kt)(p.Z,{label:"404",value:"404",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Connector was not found.")),(0,r.kt)("div",null,(0,r.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(c.Z,{mdxType:"SchemaTabs"},(0,r.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"title",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{}},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"errors"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object")),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"items",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{collapsible:!1,name:"errorId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(l.Z,{responseExample:'{\n  "type": "string",\n  "title": "string",\n  "status": 0,\n  "errors": {},\n  "errorId": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,r.kt)(p.Z,{label:"500",value:"500",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Internal Server Error")),(0,r.kt)("div",null)),(0,r.kt)(p.Z,{label:"503",value:"503",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Access to Daps failed with the given status code.")),(0,r.kt)("div",null,(0,r.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(c.Z,{mdxType:"SchemaTabs"},(0,r.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"title",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,r.kt)("details",{style:{}},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"errors"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object")),(0,r.kt)("div",{style:{marginLeft:"1rem"}},(0,r.kt)(d.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,r.kt)(d.Z,{collapsible:!1,name:"items",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(d.Z,{collapsible:!1,name:"errorId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,r.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(l.Z,{responseExample:'{\n  "type": "string",\n  "title": "string",\n  "status": 0,\n  "errors": {},\n  "errorId": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}k.isMDXComponent=!0}}]);