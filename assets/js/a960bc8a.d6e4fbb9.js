"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[43249],{23466:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>g,frontMatter:()=>m,metadata:()=>y,toc:()=>v});var a=i(87462),o=(i(67294),i(3905)),r=i(26389),n=i(94891),s=i(75190),l=i(47507),c=i(24310),d=i(63303),p=(i(75035),i(85162));const m={id:"get-company-connector-by-id-for-current-user-async",title:"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)",description:"Example: GET: /api/administration/connectors/5636F9B9-C3DE-4BA5-8027-00D17A2FECFB",sidebar_label:"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Connectors"],description:"Example: GET: /api/administration/connectors/5636F9B9-C3DE-4BA5-8027-00D17A2FECFB",operationId:"GetCompanyConnectorByIdForCurrentUserAsync",parameters:[{name:"connectorId",in:"path",description:"ID of the connector for which the details are to be displayed.",required:!0,schema:{type:"string",format:"uuid"},example:"5636F9B9-C3DE-4BA5-8027-00D17A2FECFB"}],responses:{200:{description:"Returns details of the requested connector.",content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",nullable:!0},location:{type:"string",nullable:!0},id:{type:"string",format:"uuid"},type:{enum:["COMPANY_CONNECTOR","CONNECTOR_AS_A_SERVICE"],type:"string"},status:{enum:["PENDING","ACTIVE","INACTIVE"],type:"string"},hostId:{type:"string",format:"uuid",nullable:!0},hostCompanyName:{type:"string",nullable:!0},selfDescriptionDocumentId:{type:"string",format:"uuid",nullable:!0},documentName:{type:"string",nullable:!0}},additionalProperties:!1}}}},401:{description:"The User is unauthorized"},403:{description:"user does not belong to company of companyUserId.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},404:{description:"Connector ID not found.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},500:{description:"Internal Server Error"}},method:"get",path:"/api/administration/Connectors/{connectorId}",security:[{Bearer:[]}],securitySchemes:{Bearer:{type:"apiKey",description:"JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",name:"Authorization",in:"header"}},info:{title:"Org.Eclipse.TractusX.Portal.Backend.Administration.Service",version:"v2"},postman:{name:"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)",description:{content:"Example: GET: /api/administration/connectors/5636F9B9-C3DE-4BA5-8027-00D17A2FECFB",type:"text/plain"},url:{path:["api","administration","Connectors",":connectorId"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ID of the connector for which the details are to be displayed.",type:"text/plain"},type:"any",value:"",key:"connectorId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery//org-eclipse-tractusx-portal-backend-administration-service",custom_edit_url:null},u=void 0,y={unversionedId:"kits/Digital Twin Kit/Software Development View/API EDC Discovery/get-company-connector-by-id-for-current-user-async",id:"kits/Digital Twin Kit/Software Development View/API EDC Discovery/get-company-connector-by-id-for-current-user-async",title:"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)",description:"Example: GET: /api/administration/connectors/5636F9B9-C3DE-4BA5-8027-00D17A2FECFB",source:"@site/docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery/get-company-connector-by-id-for-current-user-async.api.mdx",sourceDirName:"kits/Digital Twin Kit/Software Development View/API EDC Discovery",slug:"/kits/Digital Twin Kit/Software Development View/API EDC Discovery/get-company-connector-by-id-for-current-user-async",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API EDC Discovery/get-company-connector-by-id-for-current-user-async",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-company-connector-by-id-for-current-user-async",title:"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)",description:"Example: GET: /api/administration/connectors/5636F9B9-C3DE-4BA5-8027-00D17A2FECFB",sidebar_label:"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Connectors"],description:"Example: GET: /api/administration/connectors/5636F9B9-C3DE-4BA5-8027-00D17A2FECFB",operationId:"GetCompanyConnectorByIdForCurrentUserAsync",parameters:[{name:"connectorId",in:"path",description:"ID of the connector for which the details are to be displayed.",required:!0,schema:{type:"string",format:"uuid"},example:"5636F9B9-C3DE-4BA5-8027-00D17A2FECFB"}],responses:{200:{description:"Returns details of the requested connector.",content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",nullable:!0},location:{type:"string",nullable:!0},id:{type:"string",format:"uuid"},type:{enum:["COMPANY_CONNECTOR","CONNECTOR_AS_A_SERVICE"],type:"string"},status:{enum:["PENDING","ACTIVE","INACTIVE"],type:"string"},hostId:{type:"string",format:"uuid",nullable:!0},hostCompanyName:{type:"string",nullable:!0},selfDescriptionDocumentId:{type:"string",format:"uuid",nullable:!0},documentName:{type:"string",nullable:!0}},additionalProperties:!1}}}},401:{description:"The User is unauthorized"},403:{description:"user does not belong to company of companyUserId.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},404:{description:"Connector ID not found.",content:{"application/json":{schema:{type:"object",properties:{type:{type:"string",nullable:!0},title:{type:"string",nullable:!0},status:{type:"integer",format:"int32"},errors:{type:"object",additionalProperties:{type:"array",items:{type:"string"}},nullable:!0},errorId:{type:"string",nullable:!0}},additionalProperties:!1}}}},500:{description:"Internal Server Error"}},method:"get",path:"/api/administration/Connectors/{connectorId}",security:[{Bearer:[]}],securitySchemes:{Bearer:{type:"apiKey",description:"JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\"",name:"Authorization",in:"header"}},info:{title:"Org.Eclipse.TractusX.Portal.Backend.Administration.Service",version:"v2"},postman:{name:"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)",description:{content:"Example: GET: /api/administration/connectors/5636F9B9-C3DE-4BA5-8027-00D17A2FECFB",type:"text/plain"},url:{path:["api","administration","Connectors",":connectorId"],host:["{{baseUrl}}"],query:[],variable:[{disabled:!1,description:{content:"(Required) ID of the connector for which the details are to be displayed.",type:"text/plain"},type:"any",value:"",key:"connectorId"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"docs-kits/kits/Digital Twin Kit/Software Development View/API EDC Discovery//org-eclipse-tractusx-portal-backend-administration-service",custom_edit_url:null},sidebar:"kits",previous:{title:"Creates a new connector with provided parameters from body, also registers connector at sd factory service. (Authorization required - Roles: add_connectors)",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API EDC Discovery/creates-a-new-connector-with-provided-parameters-from-body-also-registers-connector-at-sd-factory-service-authorization-required-roles-add-connectors"},next:{title:"post list of bpns or an empty array to retrieve available company connector. (Authorization required - Roles: view_connectors)",permalink:"/docs-kits/next/kits/Digital Twin Kit/Software Development View/API EDC Discovery/post-list-of-bpns-or-an-empty-array-to-retrieve-available-company-connector-authorization-required-roles-view-connectors"}},h={},v=[{value:"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)",id:"retrieves-company-connector-details-for-the-given-connetor-id-authorization-required---roles-view_connectors",level:2}],f={toc:v};function g(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"retrieves-company-connector-details-for-the-given-connetor-id-authorization-required---roles-view_connectors"},"Retrieves company connector details for the given connetor id. (Authorization required - Roles: view_connectors)"),(0,o.kt)("p",null,"Example: GET: /api/administration/connectors/5636F9B9-C3DE-4BA5-8027-00D17A2FECFB"),(0,o.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"Path Parameters")),(0,o.kt)("div",null,(0,o.kt)("ul",null,(0,o.kt)(s.Z,{className:"paramsItem",param:{name:"connectorId",in:"path",description:"ID of the connector for which the details are to be displayed.",required:!0,schema:{type:"string",format:"uuid"},example:"5636F9B9-C3DE-4BA5-8027-00D17A2FECFB"},mdxType:"ParamsItem"})))),(0,o.kt)("div",null,(0,o.kt)(r.Z,{mdxType:"ApiTabs"},(0,o.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,o.kt)("div",null,(0,o.kt)("p",null,"Returns details of the requested connector.")),(0,o.kt)("div",null,(0,o.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,o.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,o.kt)(d.Z,{mdxType:"SchemaTabs"},(0,o.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,o.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,o.kt)("summary",{style:{textAlign:"left"}},(0,o.kt)("strong",null,"Schema")),(0,o.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,o.kt)("ul",{style:{marginLeft:"1rem"}},(0,o.kt)(c.Z,{collapsible:!1,name:"name",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"location",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"id",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:"**Possible values:** [`COMPANY_CONNECTOR`, `CONNECTOR_AS_A_SERVICE`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:"**Possible values:** [`PENDING`, `ACTIVE`, `INACTIVE`]",defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"hostId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"hostCompanyName",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"selfDescriptionDocumentId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"uuid",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"documentName",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,o.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,o.kt)(l.Z,{responseExample:'{\n  "name": "string",\n  "location": "string",\n  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n  "type": "COMPANY_CONNECTOR",\n  "status": "PENDING",\n  "hostId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n  "hostCompanyName": "string",\n  "selfDescriptionDocumentId": "3fa85f64-5717-4562-b3fc-2c963f66afa6",\n  "documentName": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,o.kt)(p.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,o.kt)("div",null,(0,o.kt)("p",null,"The User is unauthorized")),(0,o.kt)("div",null)),(0,o.kt)(p.Z,{label:"403",value:"403",mdxType:"TabItem"},(0,o.kt)("div",null,(0,o.kt)("p",null,"user does not belong to company of companyUserId.")),(0,o.kt)("div",null,(0,o.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,o.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,o.kt)(d.Z,{mdxType:"SchemaTabs"},(0,o.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,o.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,o.kt)("summary",{style:{textAlign:"left"}},(0,o.kt)("strong",null,"Schema")),(0,o.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,o.kt)("ul",{style:{marginLeft:"1rem"}},(0,o.kt)(c.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"title",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"errors"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(c.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"items",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,o.kt)(c.Z,{collapsible:!1,name:"errorId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,o.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,o.kt)(l.Z,{responseExample:'{\n  "type": "string",\n  "title": "string",\n  "status": 0,\n  "errors": {},\n  "errorId": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,o.kt)(p.Z,{label:"404",value:"404",mdxType:"TabItem"},(0,o.kt)("div",null,(0,o.kt)("p",null,"Connector ID not found.")),(0,o.kt)("div",null,(0,o.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,o.kt)(p.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,o.kt)(d.Z,{mdxType:"SchemaTabs"},(0,o.kt)(p.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,o.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,o.kt)("summary",{style:{textAlign:"left"}},(0,o.kt)("strong",null,"Schema")),(0,o.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,o.kt)("ul",{style:{marginLeft:"1rem"}},(0,o.kt)(c.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"title",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"status",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"int32",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,o.kt)("details",{style:{}},(0,o.kt)("summary",{style:{}},(0,o.kt)("strong",null,"errors"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object")),(0,o.kt)("div",{style:{marginLeft:"1rem"}},(0,o.kt)(c.Z,{collapsible:!1,name:"type",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"}),(0,o.kt)(c.Z,{collapsible:!1,name:"items",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,o.kt)(c.Z,{collapsible:!1,name:"errorId",required:!1,deprecated:void 0,schemaDescription:void 0,schemaName:"string",qualifierMessage:void 0,defaultValue:void 0,mdxType:"SchemaItem"})))),(0,o.kt)(p.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,o.kt)(l.Z,{responseExample:'{\n  "type": "string",\n  "title": "string",\n  "status": 0,\n  "errors": {},\n  "errorId": "string"\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,o.kt)(p.Z,{label:"500",value:"500",mdxType:"TabItem"},(0,o.kt)("div",null,(0,o.kt)("p",null,"Internal Server Error")),(0,o.kt)("div",null)))))}g.isMDXComponent=!0}}]);