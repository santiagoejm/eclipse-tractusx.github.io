"use strict";(self.webpackChunkeclipse_tractusx_github_io=self.webpackChunkeclipse_tractusx_github_io||[]).push([[11008],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},57450:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={},i="Creating a Contract Definition",c={unversionedId:"kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/contract-definitions",id:"kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/contract-definitions",title:"Creating a Contract Definition",description:"Old plain JSON Schema",source:"@site/docs-kits/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/4-contract-definitions.md",sourceDirName:"kits/tractusx-edc/docs/samples/management-api-v2-walkthrough",slug:"/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/contract-definitions",permalink:"/docs-kits/next/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/contract-definitions",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"kits",previous:{title:"Creating a Policy Definition",permalink:"/docs-kits/next/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/policy-definitions"},next:{title:"Fetching provider's Catalog",permalink:"/docs-kits/next/kits/tractusx-edc/docs/samples/management-api-v2-walkthrough/catalog"}},s={},l=[{value:"Old plain JSON Schema",id:"old-plain-json-schema",level:2},{value:"New JSON-LD Document",id:"new-json-ld-document",level:2},{value:"Request",id:"request",level:2}],p={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-a-contract-definition"},"Creating a Contract Definition"),(0,r.kt)("h2",{id:"old-plain-json-schema"},"Old plain JSON Schema"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "<CONTRACT-DEFINITION-ID>",\n  "accessPolicyId": "<ACCESS-POLICY-ID>",\n  "contractPolicyId": "<CONTRACT-POLICY-ID>",\n  "assetsSelector": [\n    {\n      "operandLeft": "<OPERAND-LEFT>",\n      "operator": "<OPERATOR>",\n      "operandRight": "<OPERAND-RIGHT>"\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"new-json-ld-document"},"New JSON-LD Document"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Please note: In our samples, properties ",(0,r.kt)("strong",{parentName:"p"},"WILL NOT")," be explicitly namespaced, and internal nodes ",(0,r.kt)("strong",{parentName:"p"},"WILL NOT")," be typed, relying on ",(0,r.kt)("inlineCode",{parentName:"p"},"@vocab")," prefixing and root schema type inheritance respectively.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "@context": {\n    "@vocab": "https://w3id.org/edc/v0.0.1/ns/"\n  },\n  "@type": "ContractDefinition",\n  "@id": "<CONTRACT-DEFINITION-ID>",\n  "accessPolicyId": "<ACCESS-POLICY-ID>",\n  "contractPolicyId": "<CONTRACT-POLICY-ID>",\n  "assetsSelector": [\n    {\n      "operandLeft": "<OPERAND-LEFT>",\n      "operator": "<OPERATOR>",\n      "operandRight": "<OPERAND-RIGHT>"\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"request"},"Request"),(0,r.kt)("p",null,"In this case we generate a very simple contract definition, that only contains the minimum in terms of information.\nA Contract Definition MUST have ",(0,r.kt)("inlineCode",{parentName:"p"},"accessPolicy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"contractPolicy")," identifiers and ",(0,r.kt)("inlineCode",{parentName:"p"},"assetsSelector"),"property values.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"operandLeft")," property value MUST contain the asset property full qualified term ",(0,r.kt)("inlineCode",{parentName:"p"},"<vocabulary-uri>/<term>"),", in our case ",(0,r.kt)("inlineCode",{parentName:"p"},"https://w3id.org/edc/v0.0.1/ns/id"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST "${MANAGEMENT_URL}/v2/contractdefinitions" \\\n    --header \'X-Api-Key: password\' \\\n    --header \'Content-Type: application/json\' \\\n    --data \'{\n              "@context": {\n                "@vocab": "https://w3id.org/edc/v0.0.1/ns/"\n              },\n              "@type": "ContractDefinition",\n              "@id": "contract-definition-id",\n              "accessPolicyId": "policy-id,\n              "contractPolicyId": "policy-id",\n              "assetsSelector": [\n                {\n                  "operandLeft": "https://w3id.org/edc/v0.0.1/ns/id",\n                  "operator": "=",\n                  "operandRight": "asset-id"\n                }\n              ]\n            }\' \\\n    -s -o /dev/null -w \'Response Code: %{http_code}\\n\'\n')))}d.isMDXComponent=!0}}]);